security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # this internal class is used by Symfony to represent in-memory users
        in_memory:
            memory:
                users:
                    main_admin:
                        password: '$2y$13$nsdC2jn1DP2IAY3Uk6Ryje8f893fTNfZ5RG8RICYHKy/oZekD1RX.'
                        roles: [ 'ROLE_ADMIN' ]
    encoders:
        Symfony\Component\Security\Core\User\User: 'bcrypt'
        #Symfony\Component\Security\Core\User\User: plaintext
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            http_basic:
                realm: Bilder
#                failure_path:    /foo
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            logout:
                success_handler: App\Controller\AuthController
#                path: logout
#            access_denied_handler: App\Controller\AuthController

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
